README OF MODELMAMANGER

This Readme Auth: 18-Mar-2015 Greg White 
Software Auths: 2006-present, Student we had at SLAC, 
                Paul Chu (now at Michigan State), 
                Greg White (SLAC) 

============================================================================

SLAC to ESS port of GUI issues
------------------------------
This section itemizes some issues apparent in moving the GUI code aspents of
the XAL GUI (aka modelManager) from SLAC to ESS.
 
1. ESS is using openxal, in packages named "openxal.*" ; SLAC is using a
combination of gov.sns.* (in xal4lcls) and edu.stanford.lcls.xal (in
hlaExtensions).

SOLN: So, at some point, the modelManager should be refactored to using openxal.
P-SOLN: base modelManager on xal4lcls - hlaCommon - hlaExtensions simply as jar files!
Then refactor to openxal.
METH: this is what modelManager actually needs (from SLAC build.xml file):
ojdbc5.jar
MessageLogAPI.jar
ext.jar
xal.jar - replace refs with open xal. See jar -t to see package names
hlaCommon.jar
hlaExtensions.jar

 .. so take these and simply create an ext_jars dir for modelManager for ESS
RESOLVED: by simply delivering all SLAC dependency as jars, subject to not using
openxal!

2. Eclipse Run Configuration for SLAC will be different from ESS. 

SOLN: Most of the run config will change or not be necessary for ESS. ESS won't use AIDA
as we use for SLC modelling - so that can be removed. The CAJ properties will
also be different obviously. The DB connection will obviously be different.
1. Main Class: edu.stanford.lcls.modelmanager.ModelManagerMain
2. Arguments tab, VM Arguments:
-Dsun.java2d.pmoffscreen=false
-DAIDA_NAMESERVER_IOR_URL=http://mccas0.slac.stanford.edu/aida/NameServerPROD.ior
-Dgov.sns.jca.Context=com.cosylab.epics.caj.CAJContext
-Dcom.cosylab.epics.caj.CAJContext.addr_list="134.79.151.21 mcc-dmz.slac.stanford.edu 134.79.151.21:5061" 
-Dcom.cosylab.epics.caj.CAJContext.auto_addr_list=false 
-Dcom.cosylab.epics.caj.CAJContext.server_port=5068
-Dcom.cosylab.epics.caj.CAJContext.repeater_port=5069
-DDB_CONNECTION=jdbc:oracle:thin:@slacprod.slac.stanford.edu:1521:SLACPROD
-DDB_USERNAME=MACHINE_MODEL
-DDB_PASSWORD=yadayadayada
RESOLVED


3. Database connection used at SLAC is OCI - using Oracle specific driver. Must
be made simply JDBC.
SOLN: Use modified DataManager.getConnect that handles either classical
java-thin jdbc or OCI. If the DB_CONNECTION property is given, it is assumed to
be classical thin, else (not given) it is assumed to be OCI.
NOTE this solution sucks, but ok for now. Should be modified to accept either
OCI or classical thin DB_CONNECTION property. Then if it sees the substring
"oci:" in the URL of the DB_CONNECTION property, then it should ignore any
username and password in the properties, and use the Oracle specific driver
manager for OCI. But if "oci:" is not in the URL, assume regular case of
username and password properties also given.
RESOLVED.

4.The app communicates to the SLAC log server to issue messages. In the
interests of speed I did not remove those for initial ESS import. So all cases
where code calls the Message API for "error"level messages and above, which
would normally be propagated to the SLAC control system wide message log, will
run into "Can't connect to Log server" error. The problem is, some of the cases
of of code calling the Message API are in the XAL app itself, and ESS can fix
those because they have the source, but some are in the jar files I bundled, and
ESS presently doesn't have that. So, for now, error messages in generated by
lower level SLAC code will create ugly messages. SOLN: The solution will be to
identify what exact SLAC source code the XAL app uses, and give ESS that too, so
they can remove the SLAC specific references to SLAC's Message API.
UNRESOLVED.

5. The initial conditions for running extant machine is very SLAC specific -
with our wire scanners. ESS will have to change that.
UNRESOLVED.

6. Minor thing; in the "configure" box of the main window it gives the option
"Show MAD names". This test should be changed to say "Show element names", so
it's not tracking code specific.
UNRESOLVED (but very minor)

7. The "Log Book" button - which at slac sends a picture of the plot to the SLAC
log book, will have to be changed obviously.
UNRESOLVED.



BUGS in modelManager we've always lived with at SLAC
----------------------------------------------------

1. If a database connection fails, the main GUI appears just to keep trying
(spinning wheel) though the exception has been reported in the messages window.
But the messages window doesn't scroll so a naive user wouldn't know to look at
it to see what happened.

2. List of past models built at initialization time has a number of issues:

2.a. The selection of the models to load from the database should only be the
last month or so, and the "From" button on the main panel does indicate that.
But the actual list of models displayed is much longer than only a month.

2.b. There is a bug in the sort comparator for the sorter of the past models
list. I don't know what the bug is, but I know that with use of Java 8, unless
the property "java.util.Arrays.useLegacyMergeSort=true" is given, the sorter
throws exception with message "Comparison method violates its general
contract!".

2.c it takes a bizarrely long time to build the list of past models, and
therefore a long time to initialize the application for use. If one is home at
SLAC, it's a manageably long time (45s), but from here in Sweden, a local
executable XAL GUI is taking 10 minutes just to build the list of past models!!
Something badly wrong there.


